name: EPG TDT corregido

on:
  schedule:
    - cron: '55 6 * * *'
    - cron: '55 14 * * *'
    - cron: '55 19 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  epg_tdt_corregido:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout del repositorio
      uses: actions/checkout@v3

    - name: Descargar y procesar EPG
      run: |
        mkdir "EPG-corregido"
        curl -L https://www.tdtchannels.com/epg/TV.xml.gz -o "EPG-corregido/TV.xml.gz"
        gunzip "EPG-corregido/TV.xml.gz"
        FECHA_HORA=$(date '+%Y-%m-%d %H:%M')
        sed -i "2c\<tv generator-info-name=\"EPG TDT corregido - $FECHA_HORA\" generator-info-url=\"https://github.com/davidmuma/miEPG\">" "EPG-corregido/TV.xml"

    - name: Limpiar XML como texto plano
      run: |
        python3 <<EOF
        import re

        with open("EPG-corregido/TV.xml", "r", encoding="utf-8") as f:
            lines = f.readlines()

        cleaned_lines = []
        for line in lines:
            # Escapar & no escapados
            line = re.sub(r'&(?!amp;|lt;|gt;|quot;|apos;)', '&amp;', line)
            # Eliminar atributos con '=' dentro del valor
            if re.search(r'="[^"]*=[^"]*"', line):
                continue
            cleaned_lines.append(line)

        with open("EPG-corregido/TV.xml", "w", encoding="utf-8") as f:
            f.writelines(cleaned_lines)
        EOF

    - name: Comprimir archivo corregido
      run: gzip -c "EPG-corregido/TV.xml" > "EPG-corregido.xml.gz"

    - name: Configurar identidad de Git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

    - name: Hacer pull de los cambios remotos
      run: git pull origin main

    - name: Subir archivo corregido
      run: |
        git add EPG-corregido.xml.gz
        git commit -m "Actualización automática de EPG-corregido.xml.gz ($FECHA_HORA)"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}





